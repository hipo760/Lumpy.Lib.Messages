// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Data/Market/quote.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Htf.Schemas.V1.Pbs.Data {

  /// <summary>Holder for reflection information generated from Data/Market/quote.proto</summary>
  public static partial class QuoteReflection {

    #region Descriptor
    /// <summary>File descriptor for Data/Market/quote.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QuoteReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdEYXRhL01hcmtldC9xdW90ZS5wcm90bxIXaHRmLnNjaGVtYXMudjEucGJz",
            "LmRhdGEaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aF0RhdGEv",
            "TWFya2V0L21vbmV5LnByb3RvIp4BCgRUaWNrEhAKCGV4Y2hhbmdlGAEgASgJ",
            "Eg4KBnN5bWJvbBgCIAEoCRIhCgVwcmljZRgDIAEoCzISLmdvb2dsZS50eXBl",
            "Lk1vbmV5EiIKBnZvbHVtZRgEIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5Ei0K",
            "CXRpbWVzdGFtcBgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAi",
            "3QEKClRpY2tQYWNrZXQSEAoIZXhjaGFuZ2UYASABKAkSDgoGc3ltYm9sGAIg",
            "ASgJEhoKEmNsb3NlX2ludGVydmFsX3NlYxgLIAEoBRIXCgtwcmljZV91bml0",
            "cxgFIAMoA0ICEAESFwoLcHJpY2VfTmFub3MYBiADKAVCAhABEhgKDHZvbHVt",
            "ZV91bml0cxgHIAMoA0ICEAESGAoMdm9sdW1lX25hbm9zGAggAygFQgIQARIW",
            "Cgp0aW1lc3RhbXBzGAkgAygDQgIQARITCgt0aWNrc19jb3VudBgKIAEoBSK9",
            "AgoET0hMQxIgCgRvcGVuGAEgASgLMhIuZ29vZ2xlLnR5cGUuTW9uZXkSIAoE",
            "aGlnaBgCIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5Eh8KA2xvdxgDIAEoCzIS",
            "Lmdvb2dsZS50eXBlLk1vbmV5EiEKBWNsb3NlGAQgASgLMhIuZ29vZ2xlLnR5",
            "cGUuTW9uZXkSIgoGdm9sdW1lGAUgASgLMhIuZ29vZ2xlLnR5cGUuTW9uZXkS",
            "LQoJdGltZXN0YW1wGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cBIQCghleGNoYW5nZRgHIAEoCRIOCgZzeW1ib2wYCCABKAkSOAoLdGlja19w",
            "YWNrZXQYCSABKAsyIy5odGYuc2NoZW1hcy52MS5wYnMuZGF0YS5UaWNrUGFj",
            "a2V0QhqqAhdIdGYuU2NoZW1hcy5WMS5QYnMuRGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.Type.MoneyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Htf.Schemas.V1.Pbs.Data.Tick), global::Htf.Schemas.V1.Pbs.Data.Tick.Parser, new[]{ "Exchange", "Symbol", "Price", "Volume", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Htf.Schemas.V1.Pbs.Data.TickPacket), global::Htf.Schemas.V1.Pbs.Data.TickPacket.Parser, new[]{ "Exchange", "Symbol", "CloseIntervalSec", "PriceUnits", "PriceNanos", "VolumeUnits", "VolumeNanos", "Timestamps", "TicksCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Htf.Schemas.V1.Pbs.Data.OHLC), global::Htf.Schemas.V1.Pbs.Data.OHLC.Parser, new[]{ "Open", "High", "Low", "Close", "Volume", "Timestamp", "Exchange", "Symbol", "TickPacket" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Tick : pb::IMessage<Tick>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Tick> _parser = new pb::MessageParser<Tick>(() => new Tick());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tick> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Htf.Schemas.V1.Pbs.Data.QuoteReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tick() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tick(Tick other) : this() {
      exchange_ = other.exchange_;
      symbol_ = other.symbol_;
      price_ = other.price_ != null ? other.price_.Clone() : null;
      volume_ = other.volume_ != null ? other.volume_.Clone() : null;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tick Clone() {
      return new Tick(this);
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 1;
    private string exchange_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Exchange {
      get { return exchange_; }
      set {
        exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 2;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 3;
    private global::Google.Protobuf.Type.Money price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Type.Money Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 4;
    private global::Google.Protobuf.Type.Money volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Type.Money Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tick);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tick other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Exchange != other.Exchange) return false;
      if (Symbol != other.Symbol) return false;
      if (!object.Equals(Price, other.Price)) return false;
      if (!object.Equals(Volume, other.Volume)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Exchange.Length != 0) hash ^= Exchange.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (price_ != null) hash ^= Price.GetHashCode();
      if (volume_ != null) hash ^= Volume.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Exchange.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Exchange);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Symbol);
      }
      if (price_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Price);
      }
      if (volume_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Volume);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Exchange.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Exchange);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Symbol);
      }
      if (price_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Price);
      }
      if (volume_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Volume);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Exchange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (price_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
      }
      if (volume_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Volume);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tick other) {
      if (other == null) {
        return;
      }
      if (other.Exchange.Length != 0) {
        Exchange = other.Exchange;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.price_ != null) {
        if (price_ == null) {
          Price = new global::Google.Protobuf.Type.Money();
        }
        Price.MergeFrom(other.Price);
      }
      if (other.volume_ != null) {
        if (volume_ == null) {
          Volume = new global::Google.Protobuf.Type.Money();
        }
        Volume.MergeFrom(other.Volume);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Exchange = input.ReadString();
            break;
          }
          case 18: {
            Symbol = input.ReadString();
            break;
          }
          case 26: {
            if (price_ == null) {
              Price = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(Price);
            break;
          }
          case 34: {
            if (volume_ == null) {
              Volume = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(Volume);
            break;
          }
          case 42: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Exchange = input.ReadString();
            break;
          }
          case 18: {
            Symbol = input.ReadString();
            break;
          }
          case 26: {
            if (price_ == null) {
              Price = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(Price);
            break;
          }
          case 34: {
            if (volume_ == null) {
              Volume = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(Volume);
            break;
          }
          case 42: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TickPacket : pb::IMessage<TickPacket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TickPacket> _parser = new pb::MessageParser<TickPacket>(() => new TickPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TickPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Htf.Schemas.V1.Pbs.Data.QuoteReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TickPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TickPacket(TickPacket other) : this() {
      exchange_ = other.exchange_;
      symbol_ = other.symbol_;
      closeIntervalSec_ = other.closeIntervalSec_;
      priceUnits_ = other.priceUnits_.Clone();
      priceNanos_ = other.priceNanos_.Clone();
      volumeUnits_ = other.volumeUnits_.Clone();
      volumeNanos_ = other.volumeNanos_.Clone();
      timestamps_ = other.timestamps_.Clone();
      ticksCount_ = other.ticksCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TickPacket Clone() {
      return new TickPacket(this);
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 1;
    private string exchange_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Exchange {
      get { return exchange_; }
      set {
        exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 2;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "close_interval_sec" field.</summary>
    public const int CloseIntervalSecFieldNumber = 11;
    private int closeIntervalSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CloseIntervalSec {
      get { return closeIntervalSec_; }
      set {
        closeIntervalSec_ = value;
      }
    }

    /// <summary>Field number for the "price_units" field.</summary>
    public const int PriceUnitsFieldNumber = 5;
    private static readonly pb::FieldCodec<long> _repeated_priceUnits_codec
        = pb::FieldCodec.ForInt64(42);
    private readonly pbc::RepeatedField<long> priceUnits_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> PriceUnits {
      get { return priceUnits_; }
    }

    /// <summary>Field number for the "price_Nanos" field.</summary>
    public const int PriceNanosFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_priceNanos_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> priceNanos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PriceNanos {
      get { return priceNanos_; }
    }

    /// <summary>Field number for the "volume_units" field.</summary>
    public const int VolumeUnitsFieldNumber = 7;
    private static readonly pb::FieldCodec<long> _repeated_volumeUnits_codec
        = pb::FieldCodec.ForInt64(58);
    private readonly pbc::RepeatedField<long> volumeUnits_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> VolumeUnits {
      get { return volumeUnits_; }
    }

    /// <summary>Field number for the "volume_nanos" field.</summary>
    public const int VolumeNanosFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_volumeNanos_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> volumeNanos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> VolumeNanos {
      get { return volumeNanos_; }
    }

    /// <summary>Field number for the "timestamps" field.</summary>
    public const int TimestampsFieldNumber = 9;
    private static readonly pb::FieldCodec<long> _repeated_timestamps_codec
        = pb::FieldCodec.ForInt64(74);
    private readonly pbc::RepeatedField<long> timestamps_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Timestamps {
      get { return timestamps_; }
    }

    /// <summary>Field number for the "ticks_count" field.</summary>
    public const int TicksCountFieldNumber = 10;
    private int ticksCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TicksCount {
      get { return ticksCount_; }
      set {
        ticksCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TickPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TickPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Exchange != other.Exchange) return false;
      if (Symbol != other.Symbol) return false;
      if (CloseIntervalSec != other.CloseIntervalSec) return false;
      if(!priceUnits_.Equals(other.priceUnits_)) return false;
      if(!priceNanos_.Equals(other.priceNanos_)) return false;
      if(!volumeUnits_.Equals(other.volumeUnits_)) return false;
      if(!volumeNanos_.Equals(other.volumeNanos_)) return false;
      if(!timestamps_.Equals(other.timestamps_)) return false;
      if (TicksCount != other.TicksCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Exchange.Length != 0) hash ^= Exchange.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (CloseIntervalSec != 0) hash ^= CloseIntervalSec.GetHashCode();
      hash ^= priceUnits_.GetHashCode();
      hash ^= priceNanos_.GetHashCode();
      hash ^= volumeUnits_.GetHashCode();
      hash ^= volumeNanos_.GetHashCode();
      hash ^= timestamps_.GetHashCode();
      if (TicksCount != 0) hash ^= TicksCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Exchange.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Exchange);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Symbol);
      }
      priceUnits_.WriteTo(output, _repeated_priceUnits_codec);
      priceNanos_.WriteTo(output, _repeated_priceNanos_codec);
      volumeUnits_.WriteTo(output, _repeated_volumeUnits_codec);
      volumeNanos_.WriteTo(output, _repeated_volumeNanos_codec);
      timestamps_.WriteTo(output, _repeated_timestamps_codec);
      if (TicksCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TicksCount);
      }
      if (CloseIntervalSec != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CloseIntervalSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Exchange.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Exchange);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Symbol);
      }
      priceUnits_.WriteTo(ref output, _repeated_priceUnits_codec);
      priceNanos_.WriteTo(ref output, _repeated_priceNanos_codec);
      volumeUnits_.WriteTo(ref output, _repeated_volumeUnits_codec);
      volumeNanos_.WriteTo(ref output, _repeated_volumeNanos_codec);
      timestamps_.WriteTo(ref output, _repeated_timestamps_codec);
      if (TicksCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TicksCount);
      }
      if (CloseIntervalSec != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CloseIntervalSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Exchange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (CloseIntervalSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CloseIntervalSec);
      }
      size += priceUnits_.CalculateSize(_repeated_priceUnits_codec);
      size += priceNanos_.CalculateSize(_repeated_priceNanos_codec);
      size += volumeUnits_.CalculateSize(_repeated_volumeUnits_codec);
      size += volumeNanos_.CalculateSize(_repeated_volumeNanos_codec);
      size += timestamps_.CalculateSize(_repeated_timestamps_codec);
      if (TicksCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TicksCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TickPacket other) {
      if (other == null) {
        return;
      }
      if (other.Exchange.Length != 0) {
        Exchange = other.Exchange;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.CloseIntervalSec != 0) {
        CloseIntervalSec = other.CloseIntervalSec;
      }
      priceUnits_.Add(other.priceUnits_);
      priceNanos_.Add(other.priceNanos_);
      volumeUnits_.Add(other.volumeUnits_);
      volumeNanos_.Add(other.volumeNanos_);
      timestamps_.Add(other.timestamps_);
      if (other.TicksCount != 0) {
        TicksCount = other.TicksCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Exchange = input.ReadString();
            break;
          }
          case 18: {
            Symbol = input.ReadString();
            break;
          }
          case 42:
          case 40: {
            priceUnits_.AddEntriesFrom(input, _repeated_priceUnits_codec);
            break;
          }
          case 50:
          case 48: {
            priceNanos_.AddEntriesFrom(input, _repeated_priceNanos_codec);
            break;
          }
          case 58:
          case 56: {
            volumeUnits_.AddEntriesFrom(input, _repeated_volumeUnits_codec);
            break;
          }
          case 66:
          case 64: {
            volumeNanos_.AddEntriesFrom(input, _repeated_volumeNanos_codec);
            break;
          }
          case 74:
          case 72: {
            timestamps_.AddEntriesFrom(input, _repeated_timestamps_codec);
            break;
          }
          case 80: {
            TicksCount = input.ReadInt32();
            break;
          }
          case 88: {
            CloseIntervalSec = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Exchange = input.ReadString();
            break;
          }
          case 18: {
            Symbol = input.ReadString();
            break;
          }
          case 42:
          case 40: {
            priceUnits_.AddEntriesFrom(ref input, _repeated_priceUnits_codec);
            break;
          }
          case 50:
          case 48: {
            priceNanos_.AddEntriesFrom(ref input, _repeated_priceNanos_codec);
            break;
          }
          case 58:
          case 56: {
            volumeUnits_.AddEntriesFrom(ref input, _repeated_volumeUnits_codec);
            break;
          }
          case 66:
          case 64: {
            volumeNanos_.AddEntriesFrom(ref input, _repeated_volumeNanos_codec);
            break;
          }
          case 74:
          case 72: {
            timestamps_.AddEntriesFrom(ref input, _repeated_timestamps_codec);
            break;
          }
          case 80: {
            TicksCount = input.ReadInt32();
            break;
          }
          case 88: {
            CloseIntervalSec = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OHLC : pb::IMessage<OHLC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OHLC> _parser = new pb::MessageParser<OHLC>(() => new OHLC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OHLC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Htf.Schemas.V1.Pbs.Data.QuoteReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OHLC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OHLC(OHLC other) : this() {
      open_ = other.open_ != null ? other.open_.Clone() : null;
      high_ = other.high_ != null ? other.high_.Clone() : null;
      low_ = other.low_ != null ? other.low_.Clone() : null;
      close_ = other.close_ != null ? other.close_.Clone() : null;
      volume_ = other.volume_ != null ? other.volume_.Clone() : null;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      exchange_ = other.exchange_;
      symbol_ = other.symbol_;
      tickPacket_ = other.tickPacket_ != null ? other.tickPacket_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OHLC Clone() {
      return new OHLC(this);
    }

    /// <summary>Field number for the "open" field.</summary>
    public const int OpenFieldNumber = 1;
    private global::Google.Protobuf.Type.Money open_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Type.Money Open {
      get { return open_; }
      set {
        open_ = value;
      }
    }

    /// <summary>Field number for the "high" field.</summary>
    public const int HighFieldNumber = 2;
    private global::Google.Protobuf.Type.Money high_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Type.Money High {
      get { return high_; }
      set {
        high_ = value;
      }
    }

    /// <summary>Field number for the "low" field.</summary>
    public const int LowFieldNumber = 3;
    private global::Google.Protobuf.Type.Money low_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Type.Money Low {
      get { return low_; }
      set {
        low_ = value;
      }
    }

    /// <summary>Field number for the "close" field.</summary>
    public const int CloseFieldNumber = 4;
    private global::Google.Protobuf.Type.Money close_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Type.Money Close {
      get { return close_; }
      set {
        close_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 5;
    private global::Google.Protobuf.Type.Money volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Type.Money Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 7;
    private string exchange_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Exchange {
      get { return exchange_; }
      set {
        exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 8;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tick_packet" field.</summary>
    public const int TickPacketFieldNumber = 9;
    private global::Htf.Schemas.V1.Pbs.Data.TickPacket tickPacket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Htf.Schemas.V1.Pbs.Data.TickPacket TickPacket {
      get { return tickPacket_; }
      set {
        tickPacket_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OHLC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OHLC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Open, other.Open)) return false;
      if (!object.Equals(High, other.High)) return false;
      if (!object.Equals(Low, other.Low)) return false;
      if (!object.Equals(Close, other.Close)) return false;
      if (!object.Equals(Volume, other.Volume)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (Exchange != other.Exchange) return false;
      if (Symbol != other.Symbol) return false;
      if (!object.Equals(TickPacket, other.TickPacket)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (open_ != null) hash ^= Open.GetHashCode();
      if (high_ != null) hash ^= High.GetHashCode();
      if (low_ != null) hash ^= Low.GetHashCode();
      if (close_ != null) hash ^= Close.GetHashCode();
      if (volume_ != null) hash ^= Volume.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (Exchange.Length != 0) hash ^= Exchange.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (tickPacket_ != null) hash ^= TickPacket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (open_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Open);
      }
      if (high_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(High);
      }
      if (low_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Low);
      }
      if (close_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Close);
      }
      if (volume_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Volume);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Timestamp);
      }
      if (Exchange.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Exchange);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Symbol);
      }
      if (tickPacket_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TickPacket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (open_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Open);
      }
      if (high_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(High);
      }
      if (low_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Low);
      }
      if (close_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Close);
      }
      if (volume_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Volume);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Timestamp);
      }
      if (Exchange.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Exchange);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Symbol);
      }
      if (tickPacket_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TickPacket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (open_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Open);
      }
      if (high_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(High);
      }
      if (low_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Low);
      }
      if (close_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Close);
      }
      if (volume_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Volume);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (Exchange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (tickPacket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TickPacket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OHLC other) {
      if (other == null) {
        return;
      }
      if (other.open_ != null) {
        if (open_ == null) {
          Open = new global::Google.Protobuf.Type.Money();
        }
        Open.MergeFrom(other.Open);
      }
      if (other.high_ != null) {
        if (high_ == null) {
          High = new global::Google.Protobuf.Type.Money();
        }
        High.MergeFrom(other.High);
      }
      if (other.low_ != null) {
        if (low_ == null) {
          Low = new global::Google.Protobuf.Type.Money();
        }
        Low.MergeFrom(other.Low);
      }
      if (other.close_ != null) {
        if (close_ == null) {
          Close = new global::Google.Protobuf.Type.Money();
        }
        Close.MergeFrom(other.Close);
      }
      if (other.volume_ != null) {
        if (volume_ == null) {
          Volume = new global::Google.Protobuf.Type.Money();
        }
        Volume.MergeFrom(other.Volume);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.Exchange.Length != 0) {
        Exchange = other.Exchange;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.tickPacket_ != null) {
        if (tickPacket_ == null) {
          TickPacket = new global::Htf.Schemas.V1.Pbs.Data.TickPacket();
        }
        TickPacket.MergeFrom(other.TickPacket);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (open_ == null) {
              Open = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(Open);
            break;
          }
          case 18: {
            if (high_ == null) {
              High = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(High);
            break;
          }
          case 26: {
            if (low_ == null) {
              Low = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(Low);
            break;
          }
          case 34: {
            if (close_ == null) {
              Close = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(Close);
            break;
          }
          case 42: {
            if (volume_ == null) {
              Volume = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(Volume);
            break;
          }
          case 50: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 58: {
            Exchange = input.ReadString();
            break;
          }
          case 66: {
            Symbol = input.ReadString();
            break;
          }
          case 74: {
            if (tickPacket_ == null) {
              TickPacket = new global::Htf.Schemas.V1.Pbs.Data.TickPacket();
            }
            input.ReadMessage(TickPacket);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (open_ == null) {
              Open = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(Open);
            break;
          }
          case 18: {
            if (high_ == null) {
              High = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(High);
            break;
          }
          case 26: {
            if (low_ == null) {
              Low = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(Low);
            break;
          }
          case 34: {
            if (close_ == null) {
              Close = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(Close);
            break;
          }
          case 42: {
            if (volume_ == null) {
              Volume = new global::Google.Protobuf.Type.Money();
            }
            input.ReadMessage(Volume);
            break;
          }
          case 50: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 58: {
            Exchange = input.ReadString();
            break;
          }
          case 66: {
            Symbol = input.ReadString();
            break;
          }
          case 74: {
            if (tickPacket_ == null) {
              TickPacket = new global::Htf.Schemas.V1.Pbs.Data.TickPacket();
            }
            input.ReadMessage(TickPacket);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
